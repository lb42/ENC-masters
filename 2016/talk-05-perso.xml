<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title xml:lang="fr">Créer une personnalisation TEI</title>
            <author xml:id="LB">Lou Burnard Consulting</author>
         </titleStmt>
         <publicationStmt>
            <p xml:lang="fr">Préparé pour ENC MasterPro 2016</p>
         </publicationStmt>
         <sourceDesc>
            <p>Enlarged from ODD MuteC 2014 which was majoritairement nouveau!</p>
         </sourceDesc>
      </fileDesc>
      <revisionDesc>
         <change who="#LB" when="2016-03-01">1er jet</change>
      </revisionDesc>
   </teiHeader>
   <text>
      <body>
         <div xml:lang="en">
            <head>ODD is also a customization language </head>
            <p>It is used both to specify your choices from the TEI framework, and to specify the
               framework itself</p>
            <p>A customization ODD specifies a selection or modification of the objects provided by
               another ODD, typically (but not necessarily) some release of the whole TEI framework
               by <list>
                  <item>selecting some modules</item>
                  <item>selecting or deleting some of the objects defined by those modules
                     (éléments, classes, datatypes, macros) </item>
                  <item>selecting or deleting some attributes </item>
                  <item>modifying or replacing some parts of the original specification (e.g. a
                     valList or an example)</item>
                  <item>possibly adding entirely new objects</item>
               </list></p>
            <p>A customization ODD will often contain multiple specifications for the same object:
               one original, and one modified. ODD processing must unify these, following rules we
               will explain later. </p>
         </div>
         <div xml:lang="fr">
            <head>ODD est aussi une langage de personnalisation </head>
            <p>On se sert du même système pour spécifier ses choix dans le grand bazar de la TEI et
               pour spécifier le bazar lui-même.</p>
            <p>Un ODD de personnalisation est spécifié par rapport au système complet <list>
                  <item>en sélectionnant des modules</item>
                  <item>en sélectionnant parmi les objets (éléments, classes, datatypes, macros)
                     fournis par ces modules</item>
                  <item>en supprimant quelques uns des attributs fournis par ces objets</item>
                  <item>en modifiant ou remplaçant quelques parties de ces spécifications (par ex.
                     les valList)</item>
                  <item>éventuellement en ajoutant des spécifications d'objets nouveaux</item>
               </list></p>
            <p>Le traitement d'un ODD implique la résolution de spécifications multiples pour un
               même objet</p>
         </div>
         <div xml:lang="en">
            <head>A simple customization example</head>
            <p>As you've already seen, we use the <gi>schemaSpec</gi> element to specify a schema,
               either a completely new one, or a customization. </p>
            <list>
               <item>The mandatory <att>ident</att> attribute gives a name for the schema</item>
               <item>The <att>start</att> attribute indicates the name or names of the root
                  element/s of the schema</item>
               <item>The <att>source</att> attribute identifies the location of the TEI source being
                  customized (this might be a specific version of TEI P5, or an existing
                  customization ODD) </item>
               <item>The <att>docLang</att> and <att>targetLang</att> attributes can be used to
                  select the language to be used for element descriptions and element names
                  respectively, where translations are available</item>
            </list>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
               <schemaSpec start="TEI" ident="testschema" source="tei:1.5.0" docLang="fr">
                  <!-- declarations -->
               </schemaSpec>
            </egXML>
         </div>
         <div xml:lang="fr">
            <head>Création d'un personalisation</head>
            <p>Comme vous le savez déjà, on utilise l'élément <gi>schemaSpec</gi> pour spécifier un
               schéma: qu'il soit vierge, ou personnalisé. </p>
            <list>
               <item>L'attribut <att>ident</att> obligatoire fournit un nom pour le schéma</item>
               <item>L'attribut <att>start</att> indique le ou les noms des élément(s) racine(s) du
                  schéma </item>
               <item>L'attribut <att>source</att> indique l'emplacement de la source TEI dans le cas
                  d'une personnalisation (par ex une version spécifique de TEI P5) </item>
               <item>Les attributs <att>docLang</att> et <att>targetLang</att> permettent la
                  sélection des langues à utiliser pour les descriptions d'éléments et pour les noms
                  d'élément respectivement, en supposant la présence dans cette source des
                  traductions requises</item>
            </list>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
               <schemaSpec start="TEI" ident="testschema" source="tei:1.5.0" docLang="fr">
                  <!-- déclarations -->
               </schemaSpec>
            </egXML>
         </div>
         <div xml:lang="fr">
            <head>Composants d'un schemaSpec</head>
            <list>
               <item><label>moduleRef</label> : tous les objets définis par le module</item>
               <item><label>elementSpec</label> (etc) : un objet nouveau ou modifié </item>
               <item><label>elementRef</label> (etc) : un objet déjà existant</item>
            </list>
         </div>
         <div xml:lang="en">
            <head>Choosing by exclusion</head>
            <p>You can specify just the elements you want to exclude, and take all the rest: <egXML
                  xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core" except="mentioned quote said"/>
                     <moduleRef key="header"/>
                     <moduleRef key="textstructure"/>
                  </schemaSpec>
               </egXML>
            </p>
            <p>also expressible as: <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core"/>
                     <moduleRef key="header"/>
                     <moduleRef key="textstructure"/>
                     <elementSpec ident="mentioned" mode="delete"/>
                     <elementSpec ident="quote" mode="delete"/>
                     <elementSpec ident="said" mode="delete"/>
                  </schemaSpec>
               </egXML>
            </p>
         </div>


         <div xml:lang="en">
            <head>Choosing by inclusion</head>
            <p>You can specify just the elements you want to include, and suppress all the rest :
                  <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core"/>
                     <moduleRef key="header"/>
                     <moduleRef key="textstructure" include="body div"/>
                  </schemaSpec>
               </egXML>
            </p>
            <p>also expressible as : <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core"/>
                     <moduleRef key="header"/>
                     <elementRef key="div"/>
                     <elementRef key="body"/>
                  </schemaSpec></egXML>
            </p>
            <p rend="box">Take care ! a module can define classes or macros as well as elements.
                  <att>include</att> and <att>except</att> apply <emph>only</emph> to elements!</p>
         </div>
         <div xml:lang="fr">
            <head>Sélection par inclusion</head>
            <p>Vous pouvez spécifier les éléments que vous souhaitez inclure parmi ceux qui sont
               proposés par un module : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="tei"/>
                     <moduleRef key="header"/>
                     <moduleRef key="textstructure" include="body div"/>
                  </schemaSpec>
               </egXML>
            </p>
            <p>ou (presque) également : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschéma">
                     <moduleRef key="tei"/>
                     <moduleRef key="header"/>
                     <elementRef key="div"/>
                     <elementRef key="body"/>
                  </schemaSpec></egXML>
            </p>
            <p rend="box">Attention ! un module peut définir d'autres choses que des éléments. Les
               attributs <att>include</att> et <att>except</att> ne s'appliquent qu'aux éléments</p>
         </div>

         <div xml:lang="fr">
            <head>Selection par exclusion</head>
            <p> Vous pouvez spécifier les éléments que vous souhaitez supprimer parmi ceux proposés
               par un module : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core" except="mentioned quote said"/>
                     <!-- ... -->
                  </schemaSpec>
               </egXML>
            </p>
            <p>ou également : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <schemaSpec start="TEI" ident="testschema">
                     <moduleRef key="core"/>
                     <!-- ... -->
                     <elementSpec ident="mentioned" mode="delete"/>
                     <elementSpec ident="quote" mode="delete"/>
                     <elementSpec ident="said" mode="delete"/>
                  </schemaSpec>
               </egXML>
            </p>
         </div>
         <div>
            <head>L'attribut <att>mode</att>
            </head>
            <p>Il peut arriver que votre ODD propose plusieurs déclarations pour un même objet. Ici
               par ex, il y a une déclaration de l'élément <gi>quote</gi> derivée du module
                  <ident>core</ident>, et une autre fourni explicitement par un <gi>elementSpec</gi>
            </p>
            <p>L'attribut <att>mode</att> contrôle la résolution de déclarations multiples
               eventuelles</p>
            <table>
               <row role="label">
                  <cell>valeur</cell>
                  <cell>effet</cell>
               </row>
               <row>
                  <cell>add</cell>
                  <cell>l'objet sera ajouté s'il n'existe pas encore (autrement, aucun effet)</cell>
               </row>
               <row>
                  <cell>delete</cell>
                  <cell>l'objet sera supprimé, s'il existe (autrement, aucun effet)</cell>
               </row>
               <row>
                  <cell>change</cell>
                  <cell>l'objet sera modifié, en combinant les parties précisées avec les parties
                     existantes </cell>
               </row>
               <row>
                  <cell>replace</cell>
                  <cell>l'objet sera modifié, en ajoutant les parties precisées et en supprimant
                     toutes les parties existantes</cell>
               </row>
            </table>
         </div>

         <div xml:lang="en">
            <head>First customization exercise </head>
            <p>Let's try to make a really simple schema called <ident>featherLite</ident> which
               might be used to markup a linguistic corpus. </p>
            <list>
               <item>The TEI header will contain only the minimum required for TEI conformance
                  (specifically: <gi>teiHeader </gi><gi>fileDesc</gi>
                  <gi>titleStmt</gi>
                  <gi>publicationStmt</gi>
                  <gi>sourceDesc</gi> and <gi>title</gi>) </item>
               <item>The <gi>text</gi> element will contain just a <gi>body</gi>, composed of
                     <gi>div</gi>s containing <gi>ab</gi>s </item>
               <item>The <gi>ab</gi> elements will contain <gi>s</gi> elements composed of
                     <gi>w</gi> or <gi>pc</gi> elements. </item>
               <item>The only attributes we want are <att>xml:id</att>, <att>xml:lang</att>,
                     <att>type</att>, and <att>subtype</att></item>
            </list>
            <p>You'll do an exercise like this in the next session. For the moment, think about how
               you might write the <gi>schemaSpec</gi> you'll need.</p>
         </div>
         <div xml:lang="en">
            <head>Exercice de personnalisation </head>
            <p>Nous proposons de créer un schéma <ident>transMin</ident> très simple, pour un projet
               de transcription minimale de documents d'archives. </p>
            <list>
               <item>L'entête TEI ne possédera que les composants essentiels à sa conformité (à
                  savoir : <gi>teiHeader </gi><gi>fileDesc</gi>
                  <gi>titleStmt</gi>
                  <gi>publicationStmt</gi>
                  <gi>sourceDesc</gi> et <gi>title</gi>) </item>
               <item>L'élément <gi>text</gi> est composé d'un seul <gi>body</gi> contenant des
                     <gi>div</gi>s contenant un ou plus d'éléments <gi>ab</gi>
               </item>
               <item>Nous n'attendons baliser que les changements de page (avec <gi>pb</gi>), les
                  phrases presque illisibles (avec <gi>unclear</gi>) et les phrases mises en
                  evidence (avec <gi>hi</gi>). </item>
               <item>et nous souhaitons supprimer la majorité des attributs, en gardant notamment
                     <att>xml:id</att>, <att>xml:lang</att>, <att>type</att>, <att>subtype</att>, et
                     <att>style</att>
               </item>
            </list>
            <!--<p>You'll do an exercise like this in the next session. For the moment, think about how you
          might write the <gi>schemaSpec</gi> you'll need.</p>-->
         </div>
         <div xml:lang="en">
            <head>First customization exercise (contd.)</head>
            <list>
               <item>Open the file <ident>feather-1.odd</ident> with oXygen and check that you
                  understand what it is doing</item>
               <item> Use oXygen to generate a schema from it in your favourite schema language. </item>
               <item>Create a new TEI XML document using this schema. Check what elements and
                  attributes the schema makes available. </item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Exercice de personnalisation (1) </head>
            <list>
               <item>Ouvrez le fichier <ident>transMin.odd</ident> avec oXygen</item>
               <item>Testez votre compréhension de ce fichier</item>
               <item>Utilisez oXygen pour en générer un schéma dans votre langage de schéma préférée </item>
               <item>Créez un nouveau document TEI XML qui utilise ce schéma</item>
               <item>Vérifiez les éléments et les attributs disponibles</item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Exercice de personnalisation (2) </head>
            <list>
               <item>On découvre quelques problèmes avec ce schema: <list>
                     <item>on souhaite indiquer la présence des glyphes et symboles
                        non-Unicode</item>
                     <item>on souhaite indiquer la présence des noms de personnes et de lieux</item>
                  </list></item>
               <item>Ajoutez donc les éléments <gi>g</gi> et <gi>name</gi> à votre ODD</item>
               <item>Regénérez votre schéma et testez si ces elements sont maintenant
                  disponibles.</item>
            </list>
            <p rend="box">Vous souhaitez ajouter un element non-TEI? C'est aussi possible...</p>
         </div>
         <div xml:lang="fr">
            <head>Exercice de personnalisation (3) </head>
            <p>La TEI nous propose plusieurs variétés de noms (<gi>persName</gi>,
               <gi>placeName</gi>, <gi>orgName</gi> etc.) mais rien de particulier pour les noms
               botaniques. Dans cet exercice vous allez créer un élément <gi>botName</gi> pour
               remplir cette lacune.</p>
            <list>
               <item>Revenez dans votre ODD. </item>
               <item>Ajoutez un element <gi>elementSpec</gi>, avec identifiant
                     <ident>botName</ident></item>
               <item>Dans cette spécification, il faut ajouter au moins: <list>
                     <item>un <gi>desc</gi> avec une brève description de l'élément</item>
                     <item>dans <gi>classes</gi> une indication de la classement de l'élément, avec
                        au moins un <gi>memberOf</gi> (nous vous conseillons de faire en sorte que
                        cet élément soit membre des classes <ident>att.global</ident> et
                           <ident>model.phrase</ident>) </item>
                     <item>dans <gi>content</gi> une indication du contenu du nouveau élément (par
                        ex <tag>macroRef key="macro.phraseSeq"</tag></item>
                  </list></item>
               <item>Regénérez votre schéma et testez l'effet de vos modifications.</item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Exercice de personnalisation (4) </head>
            <p>Notre personnalisation propose beaucoup d'attributs. Nous pouvons supprimer ceux qui
               ne nous interessent pas en deux manières: <list>
                  <item>on peut supprimer une classe <emph>entièrement</emph> avec un redéclaration
                     spécifiant <att>mode</att>=<val>delete</val>: <egXML
                        xmlns="http://www.tei-c.org/ns/Examples">
                        <classSpec type="atts" ident="att.declaring" mode="delete"/>
                     </egXML>
                  </item>
                  <item>ou on peut supprimer (ou séléctionner) quelques attributs spécifiques sur un
                        <gi>classRef</gi> : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                        <classRef key="att.global.rendition" except="rendition rend"/>
                     </egXML> ou, avec le même effet: <egXML
                        xmlns="http://www.tei-c.org/ns/Examples">
                        <classRef key="att.global.rendition" include="style"/>
                     </egXML>
                  </item>
               </list></p>
         </div>
         <div xml:lang="fr">
            <head>Exercice de personnalisation (5) </head>
            <p>Contrôle des attributs <list>
                  <item>Supprimez dans votre schéma les classes suivantes :
                        <ident>att.declaring</ident>, <ident>att.fragmentable</ident>,
                        <ident>att.edition</ident>, <ident>att.editLike</ident></item>
                  <item>Sélectionnez dans votre schéma l'attribut <att>key</att> de la classe
                        <ident>att.canonical</ident>; supprimez les attributs <att>rendition</att>
                     et <att>rend</att> de la classe <ident>att.global.rendition</ident></item>
                  <item>Regénérez votre schéma et testez l'effet de vos modifications...</item>
               </list>
            </p>
            <p>Vous pouvez également ajouter ou supprimer des attributs, en utilisant un
                  <gi>attList</gi>, qui contient des <gi>attDef</gi>...</p>
         </div>
         <div xml:lang="fr">
            <head>Usage de <gi>attList</gi></head>
            <list>
               <item>Trouvez le bon endroit au sein du <gi>elementDecl</gi> existant pour ajouter un
                     <gi>attList</gi>
               </item>
               <item>Insérez un <gi>attDef</gi> pour définir un nouveau attribut
                     <ident>genus</ident></item>
               <item>Cet attribut fournit le nom du genus auquel appartient l'objet indiqué:
                  expliquez cela dans son <gi>desc</gi></item>
               <item>La valeur de cet attribut sera conforme au datatype
                  <ident>teidata.word</ident></item>
               <item>Insérez un deuxième <gi>attDef</gi> pour définir un nouveau attribut
                     <att>status</att>
               </item>
               <item>Cet attribut indique le status du nom botanique, par ex s'il est international,
                  vulgaire, etc.</item>
               <item>La valeur de cet attribut conformera au datatype
                     <ident>teidata.enumerated</ident>
               </item>
               <item>Sa définition doit donc etre complétée par un <gi>valList</gi> ...à vous de le
                  définir!</item>
            </list>
         </div>
         <div>
            <head>Pour conclure...</head>
            <list>
               <item rend="ordered" >Rappel: ODD fournit des éléments adaptés pour la documentation des langues formelles
                  XML</item>
               <item>Un peu plus de schematron</item>
               <item>Confusion des langues: intégration  d'un schéma non-TEI</item>
            </list>
         </div>
         
         <div xml:lang="fr">
            <head>Rappel : ODD est conçu pour faciliter la documentation systématique des systèmes d'encodage </head>
            <list type="gloss">
               <label><gi>code</gi></label>
               <item>morceau de code exprimé en n'importe quel langage formel <hi rend='tt'>&lt;code>count =
                  56;&lt;/code> </hi></item>
               <label><gi>att</gi></label>
               <item>nom d'attribut <hi rend='tt'>&lt;att>target&lt;/att></hi></item>
               <label><gi>gi</gi></label>
               <item>nom d'élément <hi rend='tt'>&lt;gi>table&lt;/gi></hi></item>
               <label><gi>ident</gi></label>
               <item>identifiant ou nom d'un objet en n'importe quel langage formel
                  <hi rend='tt'>&lt;ident>$content&lt;/ident></hi></item>
               <label><gi>tag</gi></label>
               <item>balise (spécifique à XML) <hi rend='tt'>&lt;tag>ptr
                  target="http://www.bbc.co.uk"/&lt;/tag></hi></item>
               <label><gi>val</gi></label>
               <item>valeur par ex. d'un attribut <hi rend='tt'>&lt;val>unknown&lt;/val></hi></item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Contraintes de données avec Schematron </head>
            <list>
               <item>Une spécification d'élément peut proposer des contraintes supplémentaires sur son
                  contenu en utilisant un ou plusieurs éléments <gi>constraintSpec</gi>
               </item>
               <item>Ces règles sont exprimées (typiquement) en utilisant le langage ISO Schematron
               </item>
            </list>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="full">
               <elementSpec xmlns:s="http://purl.oclc.org/dsdl/schematron" ident="div"
                  module="teistructure" mode="change">
                  <constraintSpec ident="div" scheme="isoschematron">
                     <constraint>
                        <s:assert test="@type='prose' and .//tei:p">une division prosaique doit contenir au
                           moins un paragraphe</s:assert>
                     </constraint>
                  </constraintSpec>
               </elementSpec>
            </egXML>
         </div>
         <div xml:lang="fr">
            <head>L'élément <gi>constraintSpec</gi>
            </head>
            <p>Il définit une contrainte qui s'applique au sein de l'élément dans lequel il est
               declaré</p>
            <!--          The rule applies to the context of the element in which it is defined. </p>-->
            <list>
               <item>L'attribut <att>scheme</att> spécifie le langage dans lequel s'exprime la contrainte
                  (<val>isoschematron</val> par défaut)</item>
               <item>L'attribut <att>ident</att> est obligatoire: il fournit un identifiant unique</item>
               <item>Il rassemble une ou plusieurs <gi>constraint</gi></item>
               <item>L'élément <gi>constraint</gi> contient (typiquement) un <gi>assert</gi> ou un
                  <gi>report</gi> élément de l'espace de nommage
                  <code>http://purl.oclc.org/dsdl/schematron</code>
               </item>
               <item>L'attribut <att>test</att> fournit une expression XPath vers l'objet à tester.
                  <!--The prefix <code>tei</code> is
            defined in the TEI for you--></item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Fonctionnement des règles Schematron </head>
            <list>
               <item>Le contenu de l'élément <gi>assert</gi> est affiché si le test est
                  <hi>false</hi></item>
               <item>Le contenu de l'élément <gi>report</gi> est affiché si le test est
                  <hi>true</hi></item>
               <item>Astuce: plusieurs éléments schematron sont disponibles pour enrichir le texte du
                  message affiché, notamment <gi>name</gi> (context) et <gi>value-of</gi> (valeur) </item>
               <item>Voir <ptr target="http://www.schematron.com/"/> pour une description plus
                  détaillée</item>
            </list>
            <p rend="box"> Un schema RNG intégrant ces règles sera autogénéré si l'on utilise le
               logiciel oXygen pour traiter son ODD </p>
         </div>
         <div xml:lang="fr">
            <head>Applications typiques des regles Schematron</head>
            <list>
               <item>Contraintes de co-occurrence : <q>si l'attribut X a la valeur A, l'élément qui le
                  porte doit contenir un Y</q></item>
               <item>Contraintes arithmetique contextuelles : <q>au sein d'un <gi>titleStmt</gi>, on ne
                  permet qu'un seul <gi>title</gi></q></item>
               <item>Contraintes textuelles : <q>Les caracteres ' et ` ne sont pas permis au sein d'un
                  <tag>p xml:lang="en"</tag></q>
               </item>
               <item>Contraintes contextuelles : <q>mots en francais (xml:lang='fr') ne sont pas permis
                  au sein d'un élément latin (xml:lang='la')</q></item>
               <item>Intégrité référentielle: <q>un pointer exprimé sous la forme d'une URL et commençant par # doit
                  correspondre à un element ayant un <att>xml:id</att> identique quelque part dans le
                  document</q>
               </item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Un schematron plus complexe (1) </head>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="full">
               <constraintSpec ident="validtarget" scheme="isoschematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:*[@target]">
                        <let name="results"
                           value="for $t in tokenize(normalize-space(@target),'\s+') 
                           return starts-with($t,'#') 
                           and not(id(substring($t,2)))"/>
                        <report test="some $x in $results satisfies $x"> Erreur: Chaque pointer dans
                           "<value-of select="@target"/>" doit indiquer un ID dans ce meme document
                           (<value-of select="$results"/>)</report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </egXML>
         </div>
         <div xml:lang="en">
            <head>Techniques used in that example</head>
            <list>
               <item><code>normalize-space(@target)</code>: make sure there is no trailing space</item>
               <item><code>tokenize(normalize-space(@target),'\s+')</code>: break the attribute up into a
                  sequence of space-separated tokens</item>
               <item><code> starts-with($t,'#')</code>: only local references of interest</item>
               <item><code>not(id(substring($t,2)))</code>: is there something with an <att>xml:id</att>
                  attribute which is same as the current value without the first character</item>
               <item><code>some $x in $results satisfies $x</code>: XPath expression to check a sequence
                  of true/false values</item>
            </list>
         </div>
         <div xml:lang="fr">
            <head>Un schematron plus complexe (2) </head>
            <list>
               <item><code>normalize-space(@target)</code>: supprimer les blancs
                  non-signifiants</item>
               <item><code>tokenize(normalize-space(@target),'\s+')</code>: couper la valeur de
                  l'attribut dans des tokens séparés par des blancs</item>
               <item><code> starts-with($t,'#')</code>: ne considérer que les pointeurs locaux</item>
               <item><code>not(id(substring($t,2)))</code>: y-a-t il un attribut <att>xml:id</att> dont
                  la valeur correspond à la valeur indiquée en sélectionnant ce qui suit son 2ème
                  caractère</item>
               <item><code>some $x in $results satisfies $x</code>: expression XPath permettant la
                  validation d'une séquence de valeurs booléennes (vraies/fausses) </item>
            </list>
         </div>
         <div xml:lang="en">
            <head>Mixing in foreign schema components</head>
            <p>What if we want to extend TEI's <gi>formula</gi> to permit MathML content? We have to
               do three things:<list type="ordered">
                  <item>Pull in the MathML schema</item>
                  <item>Adjust the content model of <gi>formula</gi></item>
                  <item>Generate the TEI schema in a such a way that it doesn't conflict with
                     MathML</item>
               </list>
            </p>
         </div>
         <div xml:lang="fr">
            <head>Addition des composants d'une schéma nonTEI</head>
            <p>On souhaite utiliser l'élément TEI <gi>formula</gi> pour insérer du contenu exprimé
               en MathML: il faut donc :<list type="ordered">
                  <item>inclure les composants du schéma MathML </item>
                  <item>modifier le modèle de contenu de l'élément <gi>formula</gi></item>
                  <item>générer un schéma qui résout les conflits de nommage </item>
               </list></p>
            <p rend="block"> ATTENTION : il y a un élément <gi>list</gi> dans TEI mais également
               dans MathML !</p>
         </div>
         <div xml:lang="en">
            <head>TEI + MathML</head>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
               <schemaSpec ident="tei_math" prefix="tei_" start="TEI teiCorpus">
                  <moduleRef
                     url="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/mathml2-main.rng"/>
                  <moduleRef key="header"/>
                  <moduleRef key="core"/>
                  <moduleRef key="tei"/>
                  <moduleRef key="textstructure"/>
                  <moduleRef key="figures"/>
                  <elementSpec module="figures" ident="formula" mode="change">
                     <content>
                        <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="mathml.math"
                        />
                     </content>
                  </elementSpec>
               </schemaSpec>
            </egXML>
         </div>
         <div xml:lang="fr">
            <head>TEI + MathML : le ODD</head>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
               <schemaSpec ident="tei_math" prefix="tei_" start="TEI teiCorpus">
                  <moduleRef
                     url="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/mathml2-main.rng"/>
                  <moduleRef key="header"/>
                  <moduleRef key="core"/>
                  <moduleRef key="tei"/>
                  <moduleRef key="textstructure"/>
                  <moduleRef key="figures"/>
                  <elementSpec module="figures" ident="formula" mode="change">
                     <content>
                        <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="mathml.math"
                        />
                     </content>
                  </elementSpec>
                  <!-- pour l'instant nous supprimons ce macro -->
                  <macroSpec ident="macro.anyXML" mode="delete"/>
               </schemaSpec>
            </egXML>
            <p rend="box">L'attribut <att>prefix</att> nous permet de désambiguïser les identifiants
               ressortant des schémas différentes</p>
         </div>
         <div xml:lang="fr">
            <head>TEI + MathML : le document</head>
            <p>Le schéma généré va valider par ex : <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <p>The relevant inequalities and distributions are <formula notation="MathML">
                        <math xmlns="http://www.w3.org/1998/Math/MathML" overflow="scroll">
                           <mn>0</mn>
                           <mo>.</mo>
                           <mn>0</mn>
                           <mn>1</mn>
                           <mo>&lt;</mo>
                           <mi>κ</mi>
                           <mo>&lt;</mo>
                           <mn>1</mn>
                           <mn>0</mn>
                        </math>
                     </formula>, Vavilov distribution, and ... </p>
               </egXML>
            </p>
            <p><graphic url="../../tei-fr/trunk/Talks/Graphics/vavilov.png"/></p>
         </div>
      </body>
   </text>
</TEI>
<!--  <div xml:lang="fr">
         <head>Exercice un peu plus avancé</head>
        <p>Continuons de personnaliser le schéma feather... </p>
        <list>
          <item>Supprimez tous les attributs globaux sauf <att>style</att>
            <att>xml:id</att> et <att>xml:lang</att></item>
          <item>Supprimez l'élément <gi>title</gi> du body, mais non pas du Header</item>
          <item>Ajoutez l'élément <gi>span</gi> et assurez vous que ces règles schematron sont
            prises en compte dans votre schéma </item>
          <item>Modifiez le contenu de <gi>s</gi> pour ne permettre que des <gi>w</gi></item>
          <item>Ajouter un nouveau élément <gi>mw</gi> pour les séquences de mots</item>
        </list>
        <p rend="box">Ma proposition est disponible dans le fichier <ident>feather-final</ident> ...
        </p>
      </div>-->
